// <auto-generated />
using System;
using Geloc.Dados;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Geloc.Dados.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20181201214508_incluindoVarChar")]
    partial class incluindoVarChar
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Geloc.Dominio.Contrato", b =>
                {
                    b.Property<int>("ContratoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Acrescimo")
                        .HasColumnType("money");

                    b.Property<int>("Adicional");

                    b.Property<DateTime?>("DataCadastro");

                    b.Property<DateTime?>("DataPagamento");

                    b.Property<DateTime?>("DataRetorno");

                    b.Property<DateTime?>("DataSaida");

                    b.Property<decimal>("Desconto")
                        .HasColumnType("money");

                    b.Property<int>("EnderecoId");

                    b.Property<int>("Numero");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<int>("Pago");

                    b.Property<int>("PessoaId");

                    b.Property<int>("Renovado");

                    b.Property<DateTime?>("RetornouEm");

                    b.Property<string>("Situacao")
                        .HasColumnType("varchar")
                        .HasMaxLength(20);

                    b.Property<string>("TotalEmMetros")
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("money");

                    b.Property<decimal>("ValorAPagar")
                        .HasColumnType("money");

                    b.Property<decimal>("ValorDeve")
                        .HasColumnType("money");

                    b.Property<decimal>("ValorPago")
                        .HasColumnType("money");

                    b.Property<string>("telefonesSelecionados")
                        .HasColumnType("varchar(max)");

                    b.HasKey("ContratoId");

                    b.HasIndex("PessoaId");

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("Geloc.Dominio.Email", b =>
                {
                    b.Property<int>("EmailId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Ativo");

                    b.Property<int>("PessoaId");

                    b.Property<string>("endereco")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("EmailId");

                    b.HasIndex("PessoaId");

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("Geloc.Dominio.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Ativo");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CEP")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("PessoaId");

                    b.Property<string>("Referencia")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.HasKey("EnderecoId");

                    b.HasIndex("PessoaId");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("Geloc.Dominio.ItemCategoriaContrato", b =>
                {
                    b.Property<int>("ItemCategoriaContratoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaEquipamentoId");

                    b.Property<int>("ContratoId");

                    b.Property<DateTime?>("DataRetorno");

                    b.Property<DateTime?>("DataSaida");

                    b.Property<string>("DescricaoCategoria")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("EnderecoId");

                    b.Property<string>("MedidaPacote")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("NomePacote")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("PacoteAluguelId");

                    b.Property<int>("QuantidadePacotes");

                    b.Property<DateTime?>("RetornouEm");

                    b.Property<int>("UnidadesPorPacote");

                    b.Property<decimal>("ValorPacote")
                        .HasColumnType("money");

                    b.Property<decimal>("ValorTotalAPagar")
                        .HasColumnType("money");

                    b.Property<decimal>("acrescimoItem")
                        .HasColumnType("money");

                    b.Property<decimal>("descontoItem")
                        .HasColumnType("money");

                    b.Property<int>("quantidadeAlugada");

                    b.Property<decimal>("valorTotal")
                        .HasColumnType("money");

                    b.HasKey("ItemCategoriaContratoId");

                    b.HasIndex("ContratoId");

                    b.ToTable("ItensCategoriaContrato");
                });

            modelBuilder.Entity("Geloc.Dominio.Pessoa", b =>
                {
                    b.Property<int>("PessoaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Ativo");

                    b.Property<string>("CNPJ")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CPF")
                        .HasColumnType("varchar(14)");

                    b.Property<DateTime>("DataCadastro");

                    b.Property<DateTime?>("Nascimento");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Observacao");

                    b.Property<string>("OutrosNoLocal");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("PessoaId");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("Geloc.Dominio.Telefone", b =>
                {
                    b.Property<int>("TelefoneId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Ativo");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Observacao")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Operadora")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("PessoaId");

                    b.Property<string>("TipoTelefone")
                        .HasColumnType("varchar(20)");

                    b.HasKey("TelefoneId");

                    b.HasIndex("PessoaId");

                    b.ToTable("Telefones");
                });

            modelBuilder.Entity("Geloc.Dominio.Contrato", b =>
                {
                    b.HasOne("Geloc.Dominio.Pessoa")
                        .WithMany("Contratos")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Geloc.Dominio.Email", b =>
                {
                    b.HasOne("Geloc.Dominio.Pessoa", "Pessoa")
                        .WithMany("Emails")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Geloc.Dominio.Endereco", b =>
                {
                    b.HasOne("Geloc.Dominio.Pessoa", "Pessoa")
                        .WithMany("Enderecos")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Geloc.Dominio.ItemCategoriaContrato", b =>
                {
                    b.HasOne("Geloc.Dominio.Contrato")
                        .WithMany("itensContrato")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Geloc.Dominio.Telefone", b =>
                {
                    b.HasOne("Geloc.Dominio.Pessoa", "Pessoa")
                        .WithMany("Telefones")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
